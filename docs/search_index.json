[["index.html", "Taobao Consumer Behavior Analysis Chapter 1 Introduction", " Taobao Consumer Behavior Analysis Yibo Chen and Jiang Zhu 2021-12-13 Chapter 1 Introduction The emergent trend of online shopping is sweeping the enture world. In the US, Amazon and Ebay allows users to have the goods delievered to them in a few days just via clicking a button. In fact, the industry of online shopping has transitioned from non-existence to nearly fanaticism in just a couple of years since Alibaba, who owns the most famous online shopping platform Taobao, started their company in Hangzhou in 1999. One surprising fact about Alibaba is that, during the time it was developing Taobao, Amazon has already been in the Chinese online shopping industry for a long period of time, before which Amazon has numerous successful experience in the US. Surprisingly, Alibaba successfully defeated its competitor from the US and became the largest online shopping platform in China. In this project, we collected the user behavior data in 2017 from Alibaba’s data cloud platform Tianchi. The dataset is a giant one with over 100 million data, while it only contains a tiny sample of user behavior in 9 days. This shows the excessive large volumn of online shoppers via Taobao platform. By analyzing the dataset, we want to answer the following question: What’s the basic feature of online consumer? (eg. When do they prefer to scan the website? When do they prefer to purchase the item? What’s their favorite item? The distribution of time spending on the website for different consumer?) What is the correlation bewteen item click,buy,add to cart,add favor? What’s the difference bewteen “add to cart” and “add favor”? (Many Chinese consumers add lots of items to cart but just do not buy it for a very long time.) What’s the outlier of item or consumer? What’s the correlation bewteen items? (eg.The classic beer and diaper question) There are about 1 million users and 100 million interactions, so the interactions can be very detailed and reflects the inner thought of consumers. "],["data-sources.html", "Chapter 2 Data sources", " Chapter 2 Data sources The Primary data source of this project is Alibaba’s cloud platform Tianchi. The data set contains 1 million randomly selected user behavior including click, purchase, adding item to shopping cart and item favording during November 25 to December 03 2017. Each row of the dataset represents a specific user-item interaction, with attributes user ID, item ID, item’s category ID, behavior type and timestamp in a CSV files. The following table shows the columns of the dataset: Dataset: UserBehavior.csv: Column names Discription User_ID An integer, the serialized ID that represents a user Item_ID An integer, the serialized ID that represents an item Category_ID An integer, the serialized ID that represents the category which the corresponding item belongs to Behavior_type A string, enum-type from (‘pv’, ‘buy’, ‘cart’, ‘fav’) Timestamp An integer, the timestamp of the behavior Problems with the dataset: The dataset is too large for us to deal with since there are over 100 million entries. A ordinary personal computer cannot handle this file. Our solution is to split the data into serveral datesets or just sampling but ensuring representativeness at the same time. The dataset contains one month’s user behavior on 2017. This might not be a accurate reflection on the most current user behavior, since there might be shopping festival around the time. If customers have just experienced a shopping festival, they are less likely to buy stuff since their need was satisfied not long ago, or there might be a sales promotion during the time. However, this is the most recent data we can collect and it’s really hard to track sales promotion 4 years ago. Although user ID, item ID and category ID are provided in the dataset, the actual encoding of these ID’s are only avaliable to the company themselves. This bar us from further analyzing the data by categorizing user or items and we believe readers won’t prefer to see a long series of Item ID numbers. Datasource: We applied for UserBehavior.csv through this link. Since this document is too large(1G after compression), we might only provide the access for sample_data which we will talk about later. "],["data-transformation.html", "Chapter 3 Data transformation 3.1 Transforming Timestamp 3.2 Splitting datasets", " Chapter 3 Data transformation In this section, we will mainly focus on two stuff: Transform Timestamp column into our needed format Divide or sample from our original dataset to ensure effiency 3.1 Transforming Timestamp We hope to add Four columns from Timestamp: Column names Discription Time %Y-%m-%d %H:%M:%S Time format, representing China local time day A string, representing the day of week Hour An integer, representing the specific hour for the record Date %Y-%m-%d Time format, representing China local time We do this in following steps: Mutate a new column Time using as_datatime() and set timezone=Asia/Shanghai Define the boundaries for each day using as.numeric() and as.POSIXct() function. Delete rows which fall out of our setting boundaries for 2017-11-26 and 2017-12-2(55576 rows in total) Mutate a new column day using boundaries for each day with if…else clauses Mutate new columns hour and Date using hour() and date() function 3.2 Splitting datasets There are three ways to split our datasets to make it easier to process: Splitting according to week of days, so we focus merely on the fluctuation on a certain day. Splitting according to Behavior type. In fact, the clicking behaviors shall occupy 90% data, we can ignore it if we do not focus on the behavior pattern of customers. Splitting according to User_ID. There are about 1 million users in the dataset and it’s actually unnecessary for us to just observe trend and make visualization. we can focus on the active buyers, or just randomly select them. Finally, we choose the last method and randomly select 50,000 Users. There are 5,068,667 rows after selection, which is approximately 1/20 of original dataset and corresponds to the the size of Users pretty well. We write down this data into a new file called sample_data.csv and will focus on it in later chapters. Please go to our github repo chapter to see code in detail. "],["missing-values.html", "Chapter 4 Missing values", " Chapter 4 Missing values Our dataset has no missing pattern: Every data entry in the dataset has been accurately recorded and shows the reliability and credibility of this dataset.To fulfill this chapter,we will be using the trumpworld_polls dataset for the missing value analysis. According to introduction, the trumpworld_polls dataset comes from Pew Research Center, who has conducted a survey in several countries since 2002. At a glance of the graph, we observed that: The dataset is small and the missing patterns are evenly distributed. Thus, there is no much information on the missing patterns because they are not statistically significant to draw any conclusion. To learn more about why the data shows the pattern, we find it strange that it is at most 20 years from 2002, while we got 32 rows of data. We find that some years are repeated, and this can be explained in “question” column, which show that there are questions, one for “Favorable view of US” and the other for “Trust President”. The survey started from 2000 to 2017, 18 years in total. In 2000,2002,2004 they asked about “Trust President” and in 2001 they asked about “Favorable view of US”. In years after 2005, they asked both question. So, they actually chose different countries every year, and given that the first few years they might only ask one question, which made the NA count once that year. This perfectly explains observation 1. It’s logical then to see if the survey is trying to enlarge its country size, and we got our second observation: The poll is trying to include more countries and thus it is more likely to have less NA when the time is closer to 2017. This can be show in graph below, in fact, the only complete case is 2017, which is the latest year. So, what’s the process of adding these countries? What’s the order? The country who has close political affiliations with the US and are rather developed tend to have less NA values: Japan, Russia, France, Germany and UK are some of the countries that has the least missing values. In fact, the order is mainly chosen by Pew, and according to The R data source, they also don’t know the order of Pew. If we observe the year-countries barplot, there is a gap in 2006-2007 and 2012-2013, when some countries were added since then. We try to classify the order according to these gap: ## [1] &quot;year&quot; &quot;avg&quot; &quot;france&quot; &quot;germany&quot; &quot;italy&quot; &quot;spain&quot; &quot;uk&quot; &quot;russia&quot; &quot;jordan&quot; ## [10] &quot;turkey&quot; &quot;question&quot; ## [1] &quot;poland&quot; &quot;indonesia&quot; &quot;japan&quot; &quot;lebanon&quot; &quot;mexico&quot; ## [1] &quot;canada&quot; &quot;greece&quot; &quot;italy&quot; &quot;australia&quot; &quot;india&quot; &quot;philippines&quot; &quot;south_korea&quot; ## [8] &quot;israel&quot; &quot;ghana&quot; &quot;kenya&quot; &quot;nigeria&quot; &quot;senegal&quot; &quot;south_africa&quot; &quot;argentina&quot; ## [15] &quot;brazil&quot; &quot;chile&quot; &quot;venezuela&quot; We see that Pew firstly focus on European countries, and then partly Asian countries, and lastly including countries from Africa and America. "],["results.html", "Chapter 5 Results 5.1 Overview of dataset 5.2 Analysis by Hours 5.3 Analysis by days 5.4 Analysis by Item Category 5.5 Analysis the relationship bewteen fav&amp;cart and buy 5.6 Analysis of Users", " Chapter 5 Results 5.1 Overview of dataset In China, people might prefer to add items to cart to mark their favorite items, but adding something to cart does not necessarily mean people will buy them in a few hours. Since the difference between fav and cart is not that clear, we decide to interpret fav and cart as the same type of behavior and call it fav&amp;cart in the main part of analysis. We first draw a funnel chart to see the percentage of different kinds of User Behaviors. As we can see in Fig 1, clicking behavior has taken most of the part, and buying only takes 2% of the total behaviors, which is a baseline and we will talk about it later. It might come to our mind that this distribution shall be rather stationary, which means users click similar times everyday, and the conversion rate for them to turn their clicking behaviors into buying the staff shall be the same. 5.2 Analysis by Hours So we tried to draw a distribution of clicking and buying behavior in a day. In Fig 2, it is not surprising for us to see that the clicking behavior is rather stationary during the day time from 10am to 6pm. However, the clicking behaviors gradually increase by 80% between 6pm and 9pm. It clearly shows that Chinese online shopping users would like to go through the online stores as a recreation after work. It becomes even more interesting if we look at Fig 3. We make a graph using the amount of buying behaviors divide by the amount of clicking behaviors. In the funnel chart, the average ratio of buy/pv is about 2.2% in total(which is represented by the red line in Fig 3).However, if we try to look at this ratio deeper, we find that after 6pm, when people start to click on the app in high frequency, it seems that their clicking behavior cannot turning into buying behavior at the same scale. This also proves that people might regard searching and merely looking online merchandise as recreation. 5.3 Analysis by days Then we start to observe the data in different days. We might speculate that users might be more active during weekends since they do not need to go to work. However, things become a little bit strange in Fig 4. For the first weekend(Nov 25, Nov 26), there is no significant difference between weekend and weekdays. For the second weekend(Dec 02, Dec 03), the total number of clicking behavior rocketed by about 20% and this is surly significant. To explain this, our conjecture is that there might be sales promotion during second week. We tried to find past news but nothing was found. To make our conjecture a little bit convincing, we draw the buying behavior for each day in Fig 5. There is one thing rather interesting: Nov 26 and Dec 01 are the days when users are rather active, however their buying behavior are strangely low compared to the next day or the day before. There was a possibility that there were some sales promotion on Nov 27 and Dec 02, so people preferred to go through the app or website to search for items they would like to buy one day before the sales promotion. This might explain the days with higher user activity receive relatively low order from users. 5.4 Analysis by Item Category Another question is that: does conversion rate keep constant between popular items and the others? Or, are people more likely to buy the stuff which they click a lot? To do this, first we find out there are 4186 kind of items are bought. We divide them into 5 groups(about 800 category each) according to their clicking times descendingly, and calculate their conversion rate(buy/clicking). Here we get Fig 6 below: As we can see in the graph above, the higher the clicking rate a product category has, the lower its conversion rate is. In another word, those product that were viewed most frequently are less likely to be bought by the user. We made three conjectures about this behavior: This can be due to the fact that the product with the highest clicking rate are the ones that are commonly recommended by the system. People might be interested in clicking the product but they might already have an ideal product in their mind. Therefore, they are less likely to buy them. Those product are the ones that catches people’s attention but are too costly. For example, people like to click on luxury products such as gaming laptops or designer clothing, but are unlikely to buy them due to the high price. This can also be due to malicious user behavior, such as click-farming. This is a common problem for US online shopping platform such as Ebay and Amazon, where users are paid to click or buy a product to increase its popularity in the recommender system. 5.5 Analysis the relationship bewteen fav&amp;cart and buy Here we are trying to analysis how buying behavior is affected by fav&amp;cart behavior. Since our trading data is cut from the whole time flow, it’s possible that someone fav&amp;cart an item before the start time of our data and buy it during the 9 days(in our data time span), or vice versa. So here we just focus on existing fav&amp;cart-buy pairs and see their pattern. To do this, we filter out those items one customer fav&amp;cart and buy, and calculate difference of time for these two behaviors. In fact, there is a small portion of data which is negative (only 5.4%, 23654 sample size in total), which is rather logical and prove the feasibility of our analysis. We will ignore the negative values and plot the time diff bar plot: From the graph, it is obvious that most people tend to pay for their noted items in 2 days(about 75%),and the possibility is strictly decreasing. Surely, this is due to our limited time span, those trade in long time span are more likely to not be recorded in data. However, this provide us a good way to think about: when you fav&amp;cart a item, what is the likelihood that you will buy it? What’s more, what’s the minor difference between fav and cart? We may explore it from the time diff and the likelihood to pay for different behaviors. In fact, we search for fav-buy pair and cart-buy pair and use them to calculate conversion rate of fav = (fav-buy pair amount)/total fav behaviors and conversion rate of cart = (cart-buy pair amount)/total fav behaviors, and we implement the analysis of fav&amp;cart into fav and cart data separately, we shall get the graph below: It shows that most(66.2%) buy-fav pair just happen in half day while buy-cart pair can be more diverse.However, it’s more likely for someone pay for the stuff if they add it to cart. ## [1] &quot;The proportion of buying stuff in half day after fav is 0.661918&quot; ## [1] &quot;The conversion rate of fav is 0.044993&quot; ## [1] &quot;The proportion of buying stuff in half day after cart is 0.373897&quot; ## [1] &quot;The conversion rate of cart is 0.063948&quot; 5.6 Analysis of Users We are curious about User behavior patterns and we first retrieve the number of activities that each single user performs and plot them in a box plot. Figure 10 displays the box plot displaying the number of user activities over the 9 days: We colored all the outliers in red in the graph above and it seems that there are quite a lot of outliers on the right side which means the distribution is right-skewed. After that, we divide our users into two groups, one for the outliers and one for the others, and calculate average number of two groups to see if their behavior pattern might be different. ## [1] &quot;The average activity of outlier users:&quot; ## # A tibble: 3 × 2 ## Behavior_type count ## &lt;chr&gt; &lt;dbl&gt; ## 1 buy 3.75 ## 2 fav&amp;cart 25.7 ## 3 pv 332. ## [1] &quot;The average activity of ordinary users:&quot; ## # A tibble: 3 × 2 ## Behavior_type count ## &lt;chr&gt; &lt;dbl&gt; ## 1 buy 1.94 ## 2 fav&amp;cart 7.62 ## 3 pv 78.8 It is quite funny that the outlier users buy twice as much stuff than the others on average, however they also pay four times of attention on online shopping activity. "],["interactive-component.html", "Chapter 6 Interactive component 6.1 Link to the interactive plot: 6.2 Description 6.3 Data transformation 6.4 Instructions for the plot", " Chapter 6 Interactive component 6.1 Link to the interactive plot: Click here or copy the url: https://vizhub.com/jayZhu1020/1984578017e3456dbdce38a74fa60c24?edit=files 6.2 Description The plot was built with D3 version 6. You can find our code at vizhub. The line plot shows the total number of user behaviors by hours given a selected date from 2021-11-25 to 2021-12-03, including a functionality of showing the avergae hourly number of user behavior over these 9 days. 6.3 Data transformation We found it easier to work with JSON files with javascript. Therefore, we first transform our data into JSON fotmat where we can access each day’s hourly behavior sequence in an Javascript Array. Finally, since we observe that the JSON string is relatively short, we chose to simply copy the JSON string into index.html to simplify the process and avoid calling extra package to load the json file. 6.4 Instructions for the plot The plot is initialized with a default value of zero everywhere until the user selects an day to view the data. Users can use the dropdown box to select an day to view its hourly behavior. This is displayed as the blue line and dots. Users can hover over the dots to see the exact value of user behavior during that hour. Users can click on the checkbox to display the averge hourly number of behaviors over the 9-day period. It is displayed as the red line and dots. "],["conclusion.html", "Chapter 7 Conclusion", " Chapter 7 Conclusion By analyzing the dataset through visualization, we had a deeper understanding of the user behavior from the Taobao dataset. Firstly, we observed that most of the user behavior consists of clicking an item. This is understandable, however, we surprisingly observe that buying consist of only 2% of the user behavior. This indicates the fundamental difference between online shopping and on-site shopping, where in the former case consumers can quickly browse various products and only choose to buy a small portion of them while in the latter case buying occurs more often. We further investigate the total number of user behaviors by hours, days and item category. We found that clicking and uying does not happen concurrently. People tend to view their products at night and make purchases in the morning or afternoon. Moreover, we also observed thatthe total clicking behavior occurs more frequently during the weekends while less frequently during the weekdays. However, for buying behaviors, it is the complete opposite. By this 2 observations, we can obtain a rough idea about the online shoppers’ behavior. They prefer browing the products during weekend and nights, while buying occurs during weekdays and afternoon. Moreover, we analyze the user behavior by item category. Although the dataset provides no information about the specific item categories, we found one interesting pattern about the categories: the items that were viewed most frequently are the ones whose conversion rate is the lowest. Then we further analyzed which action between listing and carting is more likely to indicate a user will finally buy the product. We found that carting a product significantly increases the probability that a user will finally buy a product, while listing a product only slightly increases the users’ will to buy it. This also confirms with our personal experience, where we are more likely to cart the products we really like to buy, while keeping the products that we aren’t ready to spend money on to the list. Finally, we investigate the outliers of users. We define the outliers to be the ones with excessively active users. And we foudn that in fact many users exhibit abnormal behaviors with significantly more behaviors than the rest. We suspect that they are click-farming, which has always been a problem not only for Taobao but also other online shopping platform such as Amazon and Ebay. Unlukily, we are unable to draw the conclusion that those users are click-farming since they do not have a large volumn of buying activies. However, we do find interesting behaviors about those users: they are almost fanatic in viewing various products while being very unlikely to buy them. We observe 4 times more clicking behaviors for the excessively active users but only 2 times more buying behaviors. We conclude that those users are simply addictive to clicking on different products and cosnider browing products a hobby for them. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
